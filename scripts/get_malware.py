import Queue
import logging
import socket
import sys
import threading
import urllib2

import os

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)
download_queue = Queue.Queue()


class DownloaderThread(threading.Thread):
    def __init__(self):
        threading.Thread.__init__(self)

    def run(self):
        download_apps()


def download_apps():
    while not download_queue.empty():
        link = download_queue.get()
        try:
            logger.info("Downloading from " + link)
            url_parts = link.split("/")
            file_name = '/Users/harikishenh/Dev/main_project/Apps/Malware/' + \
                        url_parts[len(url_parts) - 1].replace("\n", "")
            if not os.path.isfile(file_name):
                downloaded_file = urllib2.urlopen(link)
                data = downloaded_file.read()
                open(file_name, "wb").write(data)
                logger.info(
                    "File saved as " + url_parts[len(url_parts) - 1].replace(
                        "\n", ""))
            else:
                logger.info("File Already Exists")
        except urllib2.HTTPError, e:
            logger.exception(e.code)
        except socket.timeout:
            logger.exception("Timed Out")


if __name__ == '__main__':
    if len(sys.argv) == 1:
        logger.error("No input files given")
    else:
        for i in xrange(1, len(sys.argv)):
            with open(sys.argv[i]) as f:
                content = f.readlines()
                for link in content:
                    download_queue.put(link)

        thread1 = DownloaderThread()
        thread2 = DownloaderThread()
        thread3 = DownloaderThread()
        thread4 = DownloaderThread()
        thread5 = DownloaderThread()

        thread1.start()
        thread2.start()
        thread3.start()
        thread4.start()
        thread5.start()
